#include <iostream>
#include <queue>
using namespace std;
void func(int n, int a[100][100], int f, int destiny[], int firstEl[])
{
    queue<int> q;
    q.push(f);
    destiny[f] = 0;
    firstEl[f] = -1;
    while (!q.empty())
    {
        int u = q.front();
        q.pop();
        for (int v = 0; v < n; v++)
        {
            if (a[u][v] && destiny[v] == -1)
            {
                q.push(v);
                destiny[v] = destiny[u] + 1;
                firstEl[v] = u;
            }
        }
    }
}
void out(int finish, int dist[], const int firstEl[])
{
    cout << dist[finish] << endl;
    int track[100], dest = 0;
    for (int v = finish; v != -1; v = firstEl[v])
    {
        track[dest++] = v;
    }
    for (int i = dest - 1; i >= 0; i--)
    {
        cout << track[i] + 1 << " ";
    }
    cout << endl;
}
int main()
{
    int n, dist[100], firstEl[100];
    int f, l;
    int a[100][100];
    cin >> n;
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < n; j++)
        {
            cin >> a[i][j];
        }
    }
    cin >> f >> l;
    f-=1, l-=1;
    for(int i = 0; i < n; i++)
    {
        dist[i] = -1;
        firstEl[i] = -1;
    }
    func(n, a, f, dist, firstEl);
    out(l, dist, firstEl);
    return 0;
}

